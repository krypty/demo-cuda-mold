# Compile to executable without mold. It works.
$ clang++-10 main.cu -o main --cuda-gpu-arch=sm_52 -L/usr/local/cuda/lib64 -lcudart_static -ldl -lrt -pthread
$ ./main

out[0] = 3.000000
PASSED


# Make mold the "default" linker
ln -sf /usr/local/bin/mold /usr/bin/ld

# Try to compile "normally" i.e. directly to executable
$ clang++-10 main.cu -o main --cuda-gpu-arch=sm_52 -L/usr/local/cuda/lib64 -lcudart_static -ldl -lrt -pthread

clang: warning: Unknown CUDA version 10.2. Assuming the latest supported version 10.1 [-Wunknown-cuda-version]
clang: error: unable to execute command: Segmentation fault (core dumped)
clang: error: linker command failed due to signal (use -v to see invocation)



# Compile main.cu to object file
$ clang++-10 main.cu -c --cuda-gpu-arch=sm_52



# Link object file to binary
$ clang++-10 main.o -o main -L/usr/local/cuda/lib64 -lcudart_static -ldl -lrt -pthread

clang: error: unable to execute command: Segmentation fault (core dumped)
clang: error: linker command failed due to signal (use -v to see invocation)



# Add -### to preview the command
$ clang++-10 main.o -o main --cuda-gpu-arch=sm_52 -L/usr/local/cuda/lib64 -lcudart_static -ldl -lrt -pthread -###

"/usr/bin/ld" "-z" "relro" "--hash-style=gnu" "--build-id" "--eh-frame-hdr" "-m" "elf_x86_64" "-dynamic-linker" "/lib64/ld-linux-x86-64.so.2" "-o" "main" "/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../x86_64-linux-gnu/crt1.o" "/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../x86_64-linux-gnu/crti.o" "/usr/bin/../lib/gcc/x86_64-linux-gnu/10/crtbegin.o" "-L/usr/local/cuda/lib64" "-L/usr/bin/../lib/gcc/x86_64-linux-gnu/10" "-L/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../x86_64-linux-gnu" "-L/lib/x86_64-linux-gnu" "-L/lib/../lib64" "-L/usr/lib/x86_64-linux-gnu" "-L/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../.." "-L/usr/lib/llvm-10/bin/../lib" "-L/lib" "-L/usr/lib" "-L/usr/local/cuda/lib64/stubs" "main.o" "-lcudart_static" "-ldl" "-lrt" "-lstdc++" "-lm" "-lgcc_s" "-lgcc" "-lpthread" "-lc" "-lgcc_s" "-lgcc" "/usr/bin/../lib/gcc/x86_64-linux-gnu/10/crtend.o" "/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../x86_64-linux-gnu/crtn.o"



# Run this command and expect the segmentation fault
$ "/usr/bin/ld" "-z" "relro" "--hash-style=gnu" "--build-id" "--eh-frame-hdr" "-m" "elf_x86_64" "-dynamic-linker" "/lib64/ld-linux-x86-64.so.2" "-o" "main" "/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../x86_64-linux-gnu/crt1.o" "/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../x86_64-linux-gnu/crti.o" "/usr/bin/../lib/gcc/x86_64-linux-gnu/10/crtbegin.o" "-L/usr/local/cuda/lib64" "-L/usr/bin/../lib/gcc/x86_64-linux-gnu/10" "-L/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../x86_64-linux-gnu" "-L/lib/x86_64-linux-gnu" "-L/lib/../lib64" "-L/usr/lib/x86_64-linux-gnu" "-L/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../.." "-L/usr/lib/llvm-10/bin/../lib" "-L/lib" "-L/usr/lib" "-L/usr/local/cuda/lib64/stubs" "main.o" "-lcudart_static" "-ldl" "-lrt" "-lstdc++" "-lm" "-lgcc_s" "-lgcc" "-lpthread" "-lc" "-lgcc_s" "-lgcc" "/usr/bin/../lib/gcc/x86_64-linux-gnu/10/crtend.o" "/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../x86_64-linux-gnu/crtn.o"
Segmentation fault (core dumped)



# Print out the core dumps (there seems to have two processes, because of `fork_child()` call)
$ gdb --batch -ex bt /usr/local/bin/mold /tmp/core.1641227121.ld.69   <--- parent process
[New LWP 69]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
Core was generated by `/usr/bin/ld -z relro --hash-style=gnu --build-id --eh-frame-hdr -m elf_x86_64 -'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x00007f149854d817 in raise () from /lib/x86_64-linux-gnu/libpthread.so.0
#0  0x00007f149854d817 in raise () from /lib/x86_64-linux-gnu/libpthread.so.0
#1  0x00000000005baae8 in mold::elf::fork_child () at elf/subprocess.cc:53
#2  0x00000000005d2e04 in mold::elf::elf_main<mold::elf::X86_64> (argc=40, argv=0x7ffef14ea2b8) at elf/main.cc:391
#3  0x00000000005d27cb in mold::elf::main (argc=40, argv=0x7ffef14ea2b8) at elf/main.cc:675
#4  0x000000000042058a in main (argc=40, argv=0x7ffef14ea2b8) at main.cc:48

$ gdb --batch -ex bt /usr/local/bin/mold /tmp/core.1641227121.ld.70   <---- child process
[New LWP 75]
[New LWP 71]
[New LWP 77]
[New LWP 70]
[New LWP 74]
[New LWP 72]
[New LWP 76]
[New LWP 73]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
Core was generated by `/usr/bin/ld -z relro --hash-style=gnu --build-id --eh-frame-hdr -m elf_x86_64 -'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  mold::elf::InputSection<mold::elf::X86_64>::get_priority (this=0x0) at elf/mold.h:1802
1802      return ((i64)file.priority << 32) | section_idx;
[Current thread is 1 (Thread 0x7f1496d44700 (LWP 75))]
#0  mold::elf::InputSection<mold::elf::X86_64>::get_priority (this=0x0) at elf/mold.h:1802
#1  0x00000000004a51c0 in mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe(mold::elf::Context<mold::elf::X86_64>&, mold::elf::InputSection<mold::elf::X86_64>&)::{lambda(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&)#1}::operator()(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&) const (this=0x7f1496d43148, a=..., b=...) at elf/object-file.cc:380
#2  0x00000000004a5015 in __gnu_cxx::__ops::_Iter_comp_iter<mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe(mold::elf::Context<mold::elf::X86_64>&, mold::elf::InputSection<mold::elf::X86_64>&)::{lambda(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&)#1}>::operator()<__gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, __gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > > >(__gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, __gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >) (this=0x7f1496d43148, __it1={{cie = 0x3, cie_idx = 3}, input_offset = 20176, output_offset = 4294967295, rel_idx = 705, is_alive = {_M_base = {static _S_alignment = 1, _M_i = true}, static is_always_lock_free = true}}, __it2={{cie = 0x3, cie_idx = 3}, input_offset = 20032, output_offset = 4294967295, rel_idx = 699, is_alive = {_M_base = {static _S_alignment = 1, _M_i = true}, static is_always_lock_free = true}}) at /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/predefined_ops.h:156
#3  0x00000000004a4b85 in std::__insertion_sort<__gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, __gnu_cxx::__ops::_Iter_comp_iter<mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe(mold::elf::Context<mold::elf::X86_64>&, mold::elf::InputSection<mold::elf::X86_64>&)::{lambda(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&)#1}> >(__gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, __gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, __gnu_cxx::__ops::_Iter_comp_iter<mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe(mold::elf::Context<mold::elf::X86_64>&, mold::elf::InputSection<mold::elf::X86_64>&)::{lambda(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&)#1}>) (__first={{cie = 0x3, cie_idx = 3}, input_offset = 20032, output_offset = 4294967295, rel_idx = 699, is_alive = {_M_base = {static _S_alignment = 1, _M_i = true}, static is_always_lock_free = true}}, __last={{cie = 0x3, cie_idx = 3}, input_offset = 20200, output_offset = 4294967295, rel_idx = 706, is_alive = {_M_base = {static _S_alignment = 1, _M_i = true}, static is_always_lock_free = true}}, __comp=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_algo.h:1851
#4  0x00000000004a6371 in std::__chunk_insertion_sort<__gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, long, __gnu_cxx::__ops::_Iter_comp_iter<mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe(mold::elf::Context<mold::elf::X86_64>&, mold::elf::InputSection<mold::elf::X86_64>&)::{lambda(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&)#1}> >(__gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, __gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, long, __gnu_cxx::__ops::_Iter_comp_iter<mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe(mold::elf::Context<mold::elf::X86_64>&, mold::elf::InputSection<mold::elf::X86_64>&)::{lambda(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&)#1}>) (__first={{cie = 0x3, cie_idx = 3}, input_offset = 20032, output_offset = 4294967295, rel_idx = 699, is_alive = {_M_base = {static _S_alignment = 1, _M_i = true}, static is_always_lock_free = true}}, __last={{cie = 0x0, cie_idx = 0}, input_offset = 0, output_offset = 0, rel_idx = 0, is_alive = {_M_base = {static _S_alignment = 1, _M_i = false}, static is_always_lock_free = true}}, __chunk_size=7, __comp=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_algo.h:2712
#5  0x00000000004a5da4 in std::__merge_sort_with_buffer<__gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, mold::elf::FdeRecord<mold::elf::X86_64>*, __gnu_cxx::__ops::_Iter_comp_iter<mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe(mold::elf::Context<mold::elf::X86_64>&, mold::elf::InputSection<mold::elf::X86_64>&)::{lambda(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&)#1}> >(__gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, __gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, mold::elf::FdeRecord<mold::elf::X86_64>*, __gnu_cxx::__ops::_Iter_comp_iter<mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe(mold::elf::Context<mold::elf::X86_64>&, mold::elf::InputSection<mold::elf::X86_64>&)::{lambda(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&)#1}>) (__first={{cie = 0x1, cie_idx = 1}, input_offset = 19216, output_offset = 4294967295, rel_idx = 671, is_alive = {_M_base = {static _S_alignment = 1, _M_i = true}, static is_always_lock_free = true}}, __last={{cie = 0x0, cie_idx = 0}, input_offset = 0, output_offset = 0, rel_idx = 0, is_alive = {_M_base = {static _S_alignment = 1, _M_i = false}, static is_always_lock_free = true}}, __buffer=0x560fc3f0000, __comp=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_algo.h:2733
#6  0x00000000004a4612 in std::__stable_sort_adaptive<__gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, mold::elf::FdeRecord<mold::elf::X86_64>*, long, __gnu_cxx::__ops::_Iter_comp_iter<mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe(mold::elf::Context<mold::elf::X86_64>&, mold::elf::InputSection<mold::elf::X86_64>&)::{lambda(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&)#1}> >(__gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, __gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, mold::elf::FdeRecord<mold::elf::X86_64>*, long, __gnu_cxx::__ops::_Iter_comp_iter<mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe(mold::elf::Context<mold::elf::X86_64>&, mold::elf::InputSection<mold::elf::X86_64>&)::{lambda(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&)#1}>) (__first={{cie = 0x0, cie_idx = 0}, input_offset = 24, output_offset = 4294967295, rel_idx = 0, is_alive = {_M_base = {static _S_alignment = 1, _M_i = true}, static is_always_lock_free = true}}, __last={{cie = 0x0, cie_idx = 0}, input_offset = 0, output_offset = 0, rel_idx = 0, is_alive = {_M_base = {static _S_alignment = 1, _M_i = false}, static is_always_lock_free = true}}, __buffer=0x560fc3f0000, __buffer_size=1342, __comp=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_algo.h:2766
#7  0x00000000004a4243 in std::__stable_sort<__gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, __gnu_cxx::__ops::_Iter_comp_iter<mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe(mold::elf::Context<mold::elf::X86_64>&, mold::elf::InputSection<mold::elf::X86_64>&)::{lambda(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&)#1}> >(__gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, __gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, __gnu_cxx::__ops::_Iter_comp_iter<mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe(mold::elf::Context<mold::elf::X86_64>&, mold::elf::InputSection<mold::elf::X86_64>&)::{lambda(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&)#1}>) (__first={{cie = 0x0, cie_idx = 0}, input_offset = 24, output_offset = 4294967295, rel_idx = 0, is_alive = {_M_base = {static _S_alignment = 1, _M_i = true}, static is_always_lock_free = true}}, __last={{cie = 0x0, cie_idx = 0}, input_offset = 0, output_offset = 0, rel_idx = 0, is_alive = {_M_base = {static _S_alignment = 1, _M_i = false}, static is_always_lock_free = true}}, __comp=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_algo.h:5042
#8  0x000000000043c25a in std::stable_sort<__gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe(mold::elf::Context<mold::elf::X86_64>&, mold::elf::InputSection<mold::elf::X86_64>&)::{lambda(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&)#1}>(__gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, __gnu_cxx::__normal_iterator<mold::elf::FdeRecord<mold::elf::X86_64>*, std::vector<mold::elf::FdeRecord<mold::elf::X86_64>, std::allocator<mold::elf::FdeRecord<mold::elf::X86_64> > > >, mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe(mold::elf::Context<mold::elf::X86_64>&, mold::elf::InputSection<mold::elf::X86_64>&)::{lambda(mold::elf::FdeRecord<mold::elf::X86_64> const&, mold::elf::FdeRecord<mold::elf::X86_64> const&)#1}) (__first={{cie = 0x0, cie_idx = 0}, input_offset = 24, output_offset = 4294967295, rel_idx = 0, is_alive = {_M_base = {static _S_alignment = 1, _M_i = true}, static is_always_lock_free = true}}, __last={{cie = 0x0, cie_idx = 0}, input_offset = 0, output_offset = 0, rel_idx = 0, is_alive = {_M_base = {static _S_alignment = 1, _M_i = false}, static is_always_lock_free = true}}, __comp=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_algo.h:5111
#9  0x000000000043baa0 in mold::elf::ObjectFile<mold::elf::X86_64>::read_ehframe (this=0x560e8163f00, ctx=..., isec=...) at elf/object-file.cc:378
#10 0x000000000043369b in mold::elf::ObjectFile<mold::elf::X86_64>::initialize_ehframe_sections (this=0x560e8163f00, ctx=...) at elf/object-file.cc:267
#11 0x0000000000431cf2 in mold::elf::ObjectFile<mold::elf::X86_64>::parse (this=0x560e8163f00, ctx=...) at elf/object-file.cc:763
#12 0x00000000005f3bbc in mold::elf::new_object_file<mold::elf::X86_64>(mold::elf::Context<mold::elf::X86_64>&, mold::MappedFile<mold::elf::Context<mold::elf::X86_64> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (this=0x560e8230bc0) at elf/main.cc:51
#13 0x00000000005f3b1d in tbb::detail::d2::(anonymous namespace)::task_ptr_or_nullptr<mold::elf::new_object_file<mold::elf::X86_64>(mold::elf::Context<mold::elf::X86_64>&, mold::MappedFile<mold::elf::Context<mold::elf::X86_64> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1} const&>(mold::elf::new_object_file<mold::elf::X86_64>(mold::elf::Context<mold::elf::X86_64>&, mold::MappedFile<mold::elf::Context<mold::elf::X86_64> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1} const&) (f=...) at third-party/tbb/include/tbb/../oneapi/tbb/task_group.h:222
#14 0x00000000005f3aaa in tbb::detail::d1::function_task<mold::elf::new_object_file<mold::elf::X86_64>(mold::elf::Context<mold::elf::X86_64>&, mold::MappedFile<mold::elf::Context<mold::elf::X86_64> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::execute(tbb::detail::d1::execution_data&) (this=0x560e8230b80, ed=...) at third-party/tbb/include/tbb/../oneapi/tbb/task_group.h:556
#15 0x00000000009060d4 in tbb::detail::r1::task_dispatcher::local_wait_for_all<false, tbb::detail::r1::outermost_worker_waiter> (this=<optimized out>, t=0x560e8230b80, t@entry=0x0, waiter=...) at /mold/third-party/tbb/src/tbb/task_dispatcher.h:321
#16 0x00000000008ff8b8 in tbb::detail::r1::task_dispatcher::local_wait_for_all<tbb::detail::r1::outermost_worker_waiter> (waiter=..., t=0x0, this=<optimized out>) at /mold/third-party/tbb/src/tbb/task_dispatcher.h:462
#17 tbb::detail::r1::arena::process (this=this@entry=0x560e8220480, tls=...) at /mold/third-party/tbb/src/tbb/arena.cpp:138
#18 0x000000000091050b in tbb::detail::r1::market::process (this=0x560e8180080, j=...) at /mold/third-party/tbb/src/tbb/market.cpp:596
#19 0x0000000000913ba1 in tbb::detail::r1::rml::private_worker::run (this=0x560e81a7f00) at /mold/third-party/tbb/src/tbb/private_server.cpp:267
#20 0x0000000000913dc9 in tbb::detail::r1::rml::private_worker::thread_routine (arg=<optimized out>) at /mold/third-party/tbb/src/tbb/private_server.cpp:221
#21 0x00007f14985426db in start_thread () from /lib/x86_64-linux-gnu/libpthread.so.0
#22 0x00007f149826b71f in clone () from /lib/x86_64-linux-gnu/libc.so.6

